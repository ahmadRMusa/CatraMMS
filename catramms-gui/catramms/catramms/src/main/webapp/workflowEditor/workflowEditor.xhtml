<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:media="http://xmlns.jcp.org/jsf/composite/media">

<f:metadata>
    <f:viewParam name="loadType" value="#{workflowEditor.loadType}" />
    <f:viewParam name="data" value="#{workflowEditor.data}" />
    <f:viewAction action="#{workflowEditor.init}" />
</f:metadata>

<h:head>

    <h:outputStylesheet library="css" name="catramms.css"  />

</h:head>

<h:body>

    <ui:include src="/common/loadingDialog.xhtml"/>
    <ui:include src="/common/globalConfirm.xhtml"/>
    <ui:include src="workflowEditorSupportDialogs.xhtml"/>
    <ui:include src="workflowProperties/workflowProperties.xhtml"/>
    <ui:include src="workflowProperties/addContentProperties.xhtml"/>
    <ui:include src="workflowProperties/concatDemuxerProperties.xhtml"/>
    <ui:include src="workflowProperties/cutProperties.xhtml"/>
    <ui:include src="workflowProperties/groupOfTasksProperties.xhtml"/>
    <ui:include src="workflowProperties/removeContentProperties.xhtml"/>
    <ui:include src="workflowProperties/extractTracksProperties.xhtml"/>
    <ui:include src="workflowProperties/encodeProperties.xhtml"/>
    <ui:include src="workflowProperties/overlayImageOnVideoProperties.xhtml"/>
    <ui:include src="workflowProperties/overlayTextOnVideoProperties.xhtml"/>
    <ui:include src="workflowProperties/frameProperties.xhtml"/>
    <ui:include src="workflowProperties/periodicalFramesProperties.xhtml"/>
    <ui:include src="workflowProperties/iFramesProperties.xhtml"/>
    <ui:include src="workflowProperties/motionJPEGByPeriodicalFramesProperties.xhtml"/>
    <ui:include src="workflowProperties/motionJPEGByIFramesProperties.xhtml"/>
    <ui:include src="workflowProperties/slideShowProperties.xhtml"/>
    <ui:include src="workflowProperties/ftpDeliveryProperties.xhtml"/>
    <ui:include src="workflowProperties/localCopyProperties.xhtml"/>
    <ui:include src="workflowProperties/postOnFacebookProperties.xhtml"/>
    <ui:include src="workflowProperties/postOnYouTubeProperties.xhtml"/>
    <ui:include src="workflowProperties/emailNotificationProperties.xhtml"/>
    <ui:include src="workflowProperties/httpCallbackProperties.xhtml"/>
    <ui:include src="workflowProperties/faceRecognitionProperties.xhtml"/>
    <ui:include src="workflowProperties/faceIdentificationProperties.xhtml"/>
    <ui:include src="workflowProperties/liveRecorderProperties.xhtml"/>
    <ui:include src="workflowProperties/changeFileFormatProperties.xhtml"/>

    <p:dialog widgetVar="saveWorkflowWidget" modal="true"
              header="Save Workflow" appendTo="@(body)" width="600"
              showEffect="fade" hideEffect="fade" resizable="false" draggable="true">

        <h:form id="saveWorkflowForm">

            <p:panelGrid cellpadding="10" style="width: 100%">

                <p:row>
                    <p:column>
                        <p:outputLabel value="Workflow name" style="font-weight: bold"/>
                    </p:column>
                    <p:column>
                        <p:inputText style="width:100%" id="currentWorkflowEditorName"
                                     value="#{workflowEditor.currentWorkflowEditorName}"
                                     placeholder="workspace name" />
                    </p:column>
                </p:row>

                <p:row>
                    <p:column>
                    </p:column>
                    <p:column>
                        <p:commandButton id="saveWorkflow" icon="fa fa-save"
                                         value="Save the workflow"
                                         actionListener="#{workflowEditor.saveModelToFile}"
                                         onclick="PF('saveWorkflowWidget').hide()" >
                            <p:confirm header="Confirmation" message="Are you sure?" icon="ui-icon-alert" />
                        </p:commandButton>
                    </p:column>
                </p:row>
            </p:panelGrid>

        </h:form>
    </p:dialog>

    <p:dialog widgetVar="loadWorkflowWidget" modal="true"
              header="Load Workflow" appendTo="@(body)" width="600"
              showEffect="fade" hideEffect="fade" resizable="false" draggable="true">

        <h:form id="loadWorkflowForm">

            <p:panelGrid cellpadding="10" style="width: 100%">

                <p:row>
                    <p:column>
                        <p:outputLabel value="Workflow name" style="font-weight: bold"/>
                    </p:column>
                    <p:column>
                        <p:selectOneMenu id="workflowEditorNames" value="#{workflowEditor.currentWorkflowEditorName}"
                                         autoWidth="false">
                            <f:selectItems value="#{workflowEditor.workflowEditorNames}"/>
                        </p:selectOneMenu>
                    </p:column>
                </p:row>

                <p:row>
                    <p:column>
                        <p:commandButton id="removeWorkflowName" icon="fa fa-close"
                                         value="Remove the workflow"
                                         update="workflowEditorNames"
                                         actionListener="#{workflowEditor.removeModelFile}" />
                    </p:column>
                    <p:column>
                        <p:commandButton id="loadWorkflow" icon="fa fa-upload"
                                         value="Load the workflow"
                                         actionListener="#{workflowEditor.loadModelFromFile}"
                                         update="viewForm:workspaceDiagram,viewForm:ingestWorkflowButton,viewForm:workflowIssuesWarning,jsonWorkflowForm:jsonWorkflow"
                                         onclick="PF('loadWorkflowWidget').hide()" />
                    </p:column>
                </p:row>
            </p:panelGrid>

        </h:form>
    </p:dialog>

    <h:form id="viewForm" enctype="multipart/form-data">

        <p:growl id="growl" showDetail="true" sticky="false" escape="false" life="2000">
            <p:autoUpdate />
        </p:growl>

        <p:toolbar>
            <p:toolbarGroup align="left">
                <p:outputLabel styleClass="appTitle" value="Media Management System" />
            </p:toolbarGroup>

            <p:toolbarGroup align="right">

                <p:outputLabel value="Welcome #{sessionScope.userProfile.name}" />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:outputLabel value="Workspace:" />
                <p:selectOneMenu id="workspaceName" value="#{workflowEditor.workspaceName}"
                                 autoWidth="false">
                    <f:selectItems value="#{workflowEditor.workspaceNames}" />
                    <p:ajax
                            global="true"
                            event="change"
                            listener="#{workflowEditor.init}"
                             />
                </p:selectOneMenu>

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:commandLink value="Logout" action="#{login.logout}" />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:link
                        value="Docs"
                        target="_blank"
                        href="https://github.com/giulianoc/CatraMMS/wiki"
                />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <ui:include src="/common/mainMenu.xhtml"/>

            </p:toolbarGroup>
        </p:toolbar>

        <p:toolbar id="stickedToolbar">
            <p:toolbarGroup align="left">

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:outputLabel styleClass="viewTitle" value="Workflow Editor" />

            </p:toolbarGroup>

            <p:toolbarGroup align="right">

                <p:commandButton id="ingestWorkflowButton" global="true"
                                 value="Ingest Workflow" icon="fa fa-cog"
                                 actionListener="#{workflowEditor.ingestWorkflow}"
                                 disabled="#{workflowEditor.ingestionData.workflowIssueList.size() > 0 || !sessionScope.currentWorkspaceDetails.ingestWorkflow}"
                                 update="ingestionWorkflowResultsForm"
                                 oncomplete="PF('ingestionWorkflowResults').show()">
                    <p:confirm header="Confirmation" message="Are you sure?" icon="ui-icon-alert" />
                </p:commandButton>

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <!-- disabled="#{!sessionScope.currentWorkspaceDetails.admin}" -->
                <p:commandButton id="jsonWorkflowButton" global="true"
                                 title="Json workflow"
                                 icon="fa fa-file-code-o"
                                 oncomplete="PF('jsonWorkflowWidget').show()"
                        />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:commandButton id="workflowIssuesWarning" global="true"
                                 title="Workflow issues"
                                 styleClass="#{(workflowEditor.ingestionData.workflowIssueList.size() > 0) ? 'blink' : ''}" icon="fa fa-warning"
                                 disabled="#{workflowEditor.ingestionData.workflowIssueList.size() == 0}"
                                 update="workflowIssuesForm"
                                 oncomplete="PF('workflowIssues').show()"
                        />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:commandButton global="true"
                                 icon="fa fa-upload"
                                 title="Load a workflow"
                                 actionListener="#{workflowEditor.fillWorkflowNames}"
                                 update="loadWorkflowForm:workflowEditorNames"
                                 oncomplete="PF('loadWorkflowWidget').show()" />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <p:commandButton global="true"
                                 icon="fa fa-save"
                                 title="Save the workflow"
                                 oncomplete="PF('saveWorkflowWidget').show()" />

                <span class="ui-separator">
                    <span class="ui-icon ui-icon-grip-dotted-vertical" />
                </span>

                <ui:include src="/workflowEditor/libraryMenu.xhtml"/>
            </p:toolbarGroup>
        </p:toolbar>

        <style type="text/css">
            .ui-diagram-element {
                border:0.1em dotted #E5E4E2;
                background-color: #EFEEEC;
                text-align: center;
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);
            }
            .workflowElementText {
                color: #dc3545;
                font-weight: bold;
            }
            .ui-diagram-element:hover {
                background-color: #C7C6C4;
            }
            .connection-label {
                font-weight: bold;
                color: #816A51;
            }


            .ui-diagram-element {
                width:15em;
                height:4em;
                font-size: 16px;
            }
            .connection-label {
                font-size: 16px;
            }
            .diagram-element-icon {
                width: 40px;
                height: 40px;
            }

            @media only screen and (min-width:769px) and (max-width: 992px) {
                .ui-diagram-element {
                    width:14em;
                    height:4em;
                    font-size: 14px;
                }
                .connection-label {
                    font-size: 14px;
                }
                .diagram-element-icon {
                    width: 35px;
                    height: 35px;
                }
            }
            @media only screen and (min-width:0px) and (max-width: 768px) {
                .ui-diagram-element {
                    width:13em;
                    height:3em;
                    font-size: 12px;
                }
                .connection-label {
                    font-size: 12px;
                }
                .diagram-element-icon {
                    width: 30px;
                    height: 30px;
                }
            }
        </style>

        <!-- <p:remoteCommand name="diagram_onElementClicked"
                         actionListener="#{workflowEditor.onElementClicked}" /> -->
        <p:remoteCommand name="diagram_onElementMove"
                         actionListener="#{workflowEditor.onElementMove}" />
        <script>
            // $(document).on('click', '.ui-diagram > .ui-diagram-element', function(info)
            /*
            function onElementMouseClick(nodeElement)
            {
                // var currentId = info.target.id;
                var currentId = nodeElement.id;
                var parentCurrentId = document.getElementById(currentId).parentElement.id;

                diagram_onElementClicked(
                    [
                        {
                            name : 'currentId',
                            value : currentId
                        },
                        {
                            name : 'parentCurrentId',
                            value : parentCurrentId
                        }
                    ]
                );

                return false;
            };

            function onElementMouseLeave(nodeElement)
            {
               var parent = nodeElement.parentElement;

                var currentX = parent.style['left'];
                var currentY = parent.style['top'];

                if (!parent.hasAttribute("data-prevx"))
                {
                    // console.log("DOES NOT HAVE parent.hasAttribute");
                    var prevX = document.createAttribute("data-prevx");
                    prevX.value = parent.style['left'];
                    parent.setAttributeNode(prevX);

                    var prevY = document.createAttribute("data-prevy");
                    prevY.value = parent.style['top'];
                    parent.setAttributeNode(prevY);

                    diagram_onElementMove([
                        {name : 'elementId', value : parent.id},
                        {name : 'elementX', value : currentX},
                        {name : 'elementY',value : currentY}
                    ]);
                }
                else
                {
                    // console.log("DOES HAVE parent.hasAttribute")
                    // console.log(", parent.prevx: " + parent.dataset.prevx)
                    // console.log(", currentY: " + currentY)

                    if (parent.dataset.prevx != currentX || parent.dataset.prevy != currentY)
                    {
                        // console.log("DIFFERENT");
                        parent.dataset.prevx = currentX;
                        parent.dataset.prevy = currentY;

                        diagram_onElementMove([
                            {name : 'elementId', value : parent.id},
                            {name : 'elementX', value : currentX},
                            {name : 'elementY',value : currentY}
                        ]);
                    }
                }
            }
            */

            function onElementMouseLeave(nodeElement)
            {
               var parent = nodeElement.parentElement;

                var currentX = parent.style['left'];
                var currentY = parent.style['top'];

                {
                    // console.log("DOES HAVE parent.hasAttribute")
                    // console.log(", parent.prevx: " + parent.dataset.prevx)
                    // console.log(", currentY: " + currentY)

                    if (nodeElement.dataset.elementx != currentX || nodeElement.dataset.elementy != currentY)
                    {
                        // console.log("DIFFERENT");
                        nodeElement.dataset.elementx = currentX;
                        nodeElement.dataset.elementy = currentY;

                        diagram_onElementMove([
                            {name : 'elementId', value : parent.id},
                            {name : 'elementX', value : currentX},
                            {name : 'elementY',value : currentY}
                        ]);
                    }
                }
            }
        </script>

        <p:sticky target="stickedToolbar" />

        <p:diagram id="workspaceDiagram" value="#{workflowEditor.model}" style="height:2000px" styleClass="ui-widget-content" var="el">
            <f:facet name="element" id="diagramElement" widgetVar="element">

                <!-- onclick="onElementMouseClick(this)"  -->
                <div onmouseleave="onElementMouseLeave(this)" data-elementx="#{el.positionX}" data-elementy="#{el.positionY}">
                    <p>
                        <p:graphicImage styleClass="diagram-element-icon" style="float: left;"
                                        name="/img/workspaceElements/#{el.image}" />
                        <p:commandLink
                                id="editLink"
                                value="#{el.label}"
                                title="Edit #{el.label}"
                                actionListener="#{workflowEditor.onElementLinkClicked()}"
                                update="#{el.type}Form"
                                oncomplete="PF('#{el.type}').show()">
                            <f:param name="elementId" value="#{el.elementId}" />
                        </p:commandLink>
                        <!-- <p:tooltip for="editLink" showEffect="clip" hideEffect="explode" position="left"/> -->

                        <br />

                        <h:outputText value="Id: #{el.elementId}, " />

                        <p:link
                                id="documentationLink"
                                value="#{el.type}"
                                title="Documentation for the '#{el.type}' Task"
                                target="_blank"
                                href="https://github.com/giulianoc/CatraMMS/wiki/#{el.type}"
                                />
                        <!-- <p:tooltip for="documentationLink" showEffect="clip" hideEffect="explode" position="left"/> -->
                        <!--
                        <h:outputText styleClass="#{(el.type == 'Workflow') ? 'workflowElementText' : ''}"
                                      value="#{el.type}" />
                        -->
                    </p>

                </div>
                <!--
                <p:commandLink value="#{el.label} #{el.elementId}" style="display:block;margin-top:1em;"
                               action="#{workflowEditor.onClicked(el.elementId)}"
                               oncomplete="PF('ingestionWorkflowResults').show()"
                />
                <p:outputLabel value="#{el.type}" style="display:block;" />
                -->


            </f:facet>
            <p:ajax event="connect" listener="#{workflowEditor.onConnect}"
                    update="workspaceDiagram,ingestWorkflowButton,workflowIssuesWarning,jsonWorkflowForm:jsonWorkflow"
            />
            <p:ajax event="disconnect" listener="#{workflowEditor.onDisconnect}"
                    update="workspaceDiagram,ingestWorkflowButton,workflowIssuesWarning,jsonWorkflowForm:jsonWorkflow"
            />
            <p:ajax event="connectionChange" listener="#{workflowEditor.onConnectionChange}"
                    update="workspaceDiagram,ingestWorkflowButton,workflowIssuesWarning,jsonWorkflowForm:jsonWorkflow"
            />
        </p:diagram>

        <p:dock position="bottom">
            <p:menuitem value="Group-Of-Tasks" icon="/resources/img/workspaceElements/GroupOfTasks-icon.png"
                        actionListener="#{workflowEditor.addTask('GroupOfTasks', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Add-Content" icon="/resources/img/workspaceElements/Add-Content-icon.png"
                        actionListener="#{workflowEditor.addTask('Add-Content', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Remove-Content" icon="/resources/img/workspaceElements/Remove-Content-icon.png"
                        actionListener="#{workflowEditor.addTask('Remove-Content', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Concat-Demuxer" icon="/resources/img/workspaceElements/Concat-Demuxer-icon.png"
                        actionListener="#{workflowEditor.addTask('Concat-Demuxer', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Cut" icon="/resources/img/workspaceElements/Cut-icon.png"
                        actionListener="#{workflowEditor.addTask('Cut', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Extract-Tracks" icon="/resources/img/workspaceElements/Extract-Tracks-icon.png"
                        actionListener="#{workflowEditor.addTask('Extract-Tracks', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Encode" icon="/resources/img/workspaceElements/Encode-icon.png"
                        actionListener="#{workflowEditor.addTask('Encode', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Overlay-Image-On-Video" icon="/resources/img/workspaceElements/Overlay-Image-On-Video-icon.png"
                        actionListener="#{workflowEditor.addTask('Overlay-Image-On-Video', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Overlay-Text-On-Video" icon="/resources/img/workspaceElements/Overlay-Text-On-Video-icon.png"
                        actionListener="#{workflowEditor.addTask('Overlay-Text-On-Video', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Frame" icon="/resources/img/workspaceElements/Frame-icon.png"
                        actionListener="#{workflowEditor.addTask('Frame', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Periodical-Frames" icon="/resources/img/workspaceElements/Periodical-Frames-icon.png"
                        actionListener="#{workflowEditor.addTask('Periodical-Frames', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="I-Frames" icon="/resources/img/workspaceElements/I-Frames-icon.png"
                        actionListener="#{workflowEditor.addTask('I-Frames', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Motion-JPEG-by-Periodical-Frames" icon="/resources/img/workspaceElements/Motion-JPEG-by-Periodical-Frames-icon.png"
                        actionListener="#{workflowEditor.addTask('Motion-JPEG-by-Periodical-Frames', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Motion-JPEG-by-I-Frames" icon="/resources/img/workspaceElements/Motion-JPEG-by-I-Frames-icon.png"
                        actionListener="#{workflowEditor.addTask('Motion-JPEG-by-I-Frames', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Slideshow" icon="/resources/img/workspaceElements/Slideshow-icon.png"
                        actionListener="#{workflowEditor.addTask('Slideshow', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="FTP-Delivery" icon="/resources/img/workspaceElements/FTP-Delivery-icon.png"
                        actionListener="#{workflowEditor.addTask('FTP-Delivery', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Local-Copy" icon="/resources/img/workspaceElements/Local-Copy-icon.png"
                        actionListener="#{workflowEditor.addTask('Local-Copy', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Post-On-Facebook" icon="/resources/img/workspaceElements/Post-On-Facebook-icon.png"
                        actionListener="#{workflowEditor.addTask('Post-On-Facebook', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Post-On-YouTube" icon="/resources/img/workspaceElements/Post-On-YouTube-icon.png"
                        actionListener="#{workflowEditor.addTask('Post-On-YouTube', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Live-Recorder" icon="/resources/img/workspaceElements/Live-Recorder-icon.png"
                        actionListener="#{workflowEditor.addTask('Live-Recorder', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Email-Notification" icon="/resources/img/workspaceElements/Email-Notification-icon.png"
                        actionListener="#{workflowEditor.addTask('Email-Notification', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Change-File-Format" icon="/resources/img/workspaceElements/Change-File-Format-icon.png"
                        actionListener="#{workflowEditor.addTask('Change-File-Format', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="HTTP-Callback" icon="/resources/img/workspaceElements/HTTP-Callback-icon.png"
                        actionListener="#{workflowEditor.addTask('HTTP-Callback', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Face-Recognition" icon="/resources/img/workspaceElements/Face-Recognition-icon.png"
                        actionListener="#{workflowEditor.addTask('Face-Recognition', null, null)}"
                        update="workspaceDiagram"/>
            <p:menuitem value="Face-Identification" icon="/resources/img/workspaceElements/Face-Identification-icon.png"
                        actionListener="#{workflowEditor.addTask('Face-Identification', null, null)}"
                        update="workspaceDiagram"/>
        </p:dock>

    </h:form>

</h:body>
</html>